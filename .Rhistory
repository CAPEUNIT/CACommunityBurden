"Percentage of adults aged 18 to 64 years currently insured",
"Percentage of 3 and 4 year olds enrolled in school",
"Percentage of population over age 25 with a bachelor's education or higher",
"Percent of the population with an income exceeding 200% of federal poverty level",
"Percentage of the population living within a half-mile of a park, beach, or open space greater than 1 acre",
"Percent of households with kitchen facilities and plumbing")
names(sdohVec) <- sdohVecL
lList         <- sort(as.character(unique(datCounty$county)))
lListNoState  <- lList[lList != STATE]
if (sjc) {lList <- lList[lList %in% sjconsortium]}
nC       <- 5
myColor1 <- rev(brewer.pal(nC,"RdYlBu"))
gsub(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1], replacement = paste0("<b>", dat.1[,1]), "</b>")
View(dat.1)
dat.1$causeList <- causeList36[match(dat.1$CAUSE,causeList36[,"LABEL"]),"causeList"]
dat.1 <- dat.1[,c("causeList","Ndeaths","cDeathRate","aRate","YLL","YLLper","YLL.adj.rate","SMR")]
dat.1[,3:6] <- round(dat.1[3:6],1)
View(dat.1)
gsub(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1], replacement = paste0("<b>", dat.1[,1]), "</b>")
View(gsub(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1], replacement = paste0("<b>", dat.1[,1]), "</b>"))
View(dat.1)
?grepl
View(grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1], replacement = paste0("<b>", dat.1[,1]), "</b>", sep = ""))
View(grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1], replacement = paste0("<b>", dat.1[,1], "</b>", sep = ""))
)
grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1])
grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]) <- paste0("<b>", dat.1[,1], "</b>", sep = "")
View(dat.1)
dat.1[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1])]
dat.1[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]
paste0("<b>", dat.1[,1], "</b>", sep = "")
dat.1[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]
paste0("<b>         ", dat.1[,1][grepl(pattern)]= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1])], "</b>", sep = "")
dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),])
paste0("<b>         ", dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),], "</b>", sep = "")
dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]
View(dat.1)
dat.1[dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),],]
dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]
grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1])
paste0("<b>         ", dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),], "</b>", sep = "")
dat.1[,1]
grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),
grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1])
dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),],
dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]
dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causList
dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList
paste0("<b>         ", dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList, "</b>", sep = "")
dat.1[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]
dat.1[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList
dat.1[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList <- paste0("<b>         ", dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList, "</b>", sep = "")
View(dat.1)
dat.1$causeList <- causeList36[match(dat.1$CAUSE,causeList36[,"LABEL"]),"causeList"]
dat.1 <- filter(inDat, inDat$county=="Alameda", inDat$year==2015,inDat$sex=="Total", inDat$CAUSE !=0)
dat.1 <- filter(inDat, inDat$county=="Alameda", inDat$year=="2015", inDat$sex=="Total", inDat$CAUSE !=0)
dat.1 <- filter(inDat, county=="Alameda", year==2015,sex=="Total", CAUSE !=0)
dat.1 <- filter(inDat, inDat$county=="Alameda", inDat$year==2015, inDat$sex=="Total", inDat$CAUSE !=0)
require(dplyr)
dat.1 <- filter(inDat, inDat$county=="Alameda", inDat$year==2015, inDat$sex=="Total", inDat$CAUSE !=0)
dat.1$causeList <- causeList36[match(dat.1$CAUSE,causeList36[,"LABEL"]),"causeList"]
dat.1 <- dat.1[,c("causeList","Ndeaths","cDeathRate","aRate","YLL","YLLper","YLL.adj.rate","SMR")]
dat.1[,3:6] <- round(dat.1[3:6],1)
?gsub
dat.1[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList <- paste0("<b>         ", dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList, "</b>", sep = "")
View(dat.1)
dat.1[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList <- paste0("<p style=\"text-indent: 60px\">", dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList, "</p>", sep = "")
gsub(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", replacement = "", x = dat.1[,1])
View(dat.1)
dat.1 <- dplyr::filter(inDat, inDat$county=="Alameda", inDat$year==2015,inDat$sex=="Total", inDat$CAUSE !=0)
dat.1$causeList <- causeList36[match(dat.1$CAUSE,causeList36[,"LABEL"]),"causeList"]
dat.1 <- dat.1[,c("causeList","Ndeaths","cDeathRate","aRate","YLL","YLLper","YLL.adj.rate","SMR")]
dat.1[,3:6] <- round(dat.1[3:6],1)
View(dat.1)
dat.1[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList <- paste0("<p style=\"text-indent: 60px\">", dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList, "</p>", sep = "")
View(dat.1)
dat.1 <- dplyr::filter(inDat, inDat$county=="Alameda", inDat$year==2015,inDat$sex=="Total", inDat$CAUSE !=0)
View(dat.1)
dat.1$causeList <- causeList36[match(dat.1$CAUSE,causeList36[,"LABEL"]),"causeList"]
dat.1 <- dat.1[,c("causeList","Ndeaths","cDeathRate","aRate","YLL","YLLper","YLL.adj.rate","SMR")]
dat.1[,3:6] <- round(dat.1[3:6],1)
View(dat.1)
dat.1[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList <- paste0("<p style=\"text-indent: 60px\">", dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList, "</p>", sep = "")
dat.1$causeList <- gsub(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", replacement = "", x = dat.1[,1])
View(dat.1)
dat.1[grepl(pattern = "\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList <- paste0("<p style=\"text-indent: 20px\">", dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList, "</p>", sep = "")
dat.1$causeList <- gsub(pattern = "\\.\\.\\.\\.\\.\\.", replacement = "", x = dat.1[,1])
View(dat.1)
dat.1[grepl(pattern = "\\.\\.\\.", x = dat.1[,1]),]$causeList <- paste0("<b>", dat.1[grepl(pattern= "\\.\\.\\.", x = dat.1[,1]),]$causeList, "</b>", sep = "")
dat.1$causeList <- gsub(pattern = "\\.\\.\\.", replacement = "", x = dat.1[,1])
View(dat.1)
names(dat.1) <- c("Condition","Number of deaths","Crude Death Rate","Age-Adjusted Death Rate","Years of Life Lost (YLL)","YLL per 100,000 population","Age-Adjusted YLL Rate","Standard Mortality Ratio")
shiny::runApp('myCBD')
runApp('myCBD')
HTML(causeList36)
View(gbdMap0)
View(gbdMap0)
View(causeList36)
causeList36[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = causeList36[,1]),]$causeList
causeList36[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList
View(causeList36)
runApp('myCBD')
View(causeList36)
causeList36       <- gbdMap0[!is.na(gbdMap0$causeList),c("LABEL","causeList","nameOnly")] %>% arrange(LABEL)
View(causeList36)
causeList36[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<p style=\"text-indent: 60px\">", causeList36[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList, "</p>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", replacement = "", x = causeList36[,2])
causeList36[grepl(pattern = "\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<p style=\"text-indent: 20px\">", causeList36[grepl(pattern= "\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList, "</p>", sep = "")
dat.1$causeList <- gsub(pattern = "\\.\\.\\.\\.\\.\\.", replacement = "", x = dat.1[,2])
causeList36[grepl(pattern = "\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<b>", causeList36[grepl(pattern= "\\.\\.\\.", x = causeList36[,2]),]$causeList, "</b>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.", replacement = "", x = causeList36[,2])
View(causeList36)
runApp('myCBD')
causeList36[grepl(pattern = "\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<b>", causeList36[grepl(pattern= "\\.\\.\\.", x = causeList36[,2]),]$causeList, "</b>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.", replacement = "", x = causeList36[,2])
View(causeList36)
runApp('myCBD')
causeList36       <- gbdMap0[!is.na(gbdMap0$causeList),c("LABEL","causeList","nameOnly")] %>% arrange(LABEL)
causeList36[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<p style=\"text-indent: 60px\">", causeList36[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList, "</p>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", replacement = "", x = causeList36[,2])
causeList36[grepl(pattern = "\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<p style=\"text-indent: 20px\">", causeList36[grepl(pattern= "\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList, "</p>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.\\.\\.\\.", replacement = "", x = dat.1[,2])
causeList36[grepl(pattern = "\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<b>", causeList36[grepl(pattern= "\\.\\.\\.", x = causeList36[,2]),]$causeList, "</b>", sep = "")
runApp('myCBD')
causeList36$causeList <- gsub(pattern = "\\.\\.\\.", replacement = "", x = causeList36[,2])
causeNum36        <- causeList36[,"LABEL"]
names(causeNum36) <- causeList36[,"causeList" ]
phList   <- causeList36[nchar(causeList36$LABEL) <= 3,]
phCode   <- phList[,"LABEL"]
names(phCode) <- phList[,"causeList" ]
bigList  <- causeList36[nchar(causeList36$LABEL) == 1,]
bigCode  <- bigList[,"LABEL"]
names(bigCode) <- bigList[,"causeList"]
sdohVec  <- c("hpi2score", "insured", "inpreschool", "bachelorsed", "abovepoverty", "parkaccess","houserepair")
sdohVecL <- c(
"Health Places Index score",
"Percentage of adults aged 18 to 64 years currently insured",
"Percentage of 3 and 4 year olds enrolled in school",
"Percentage of population over age 25 with a bachelor's education or higher",
"Percent of the population with an income exceeding 200% of federal poverty level",
"Percentage of the population living within a half-mile of a park, beach, or open space greater than 1 acre",
"Percent of households with kitchen facilities and plumbing")
names(sdohVec) <- sdohVecL
causeList36       <- gbdMap0[!is.na(gbdMap0$causeList),c("LABEL","causeList","nameOnly")] %>% arrange(LABEL)
causeList36[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<p style=\"text-indent: 60px\">", causeList36[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList, "</p>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", replacement = "", x = causeList36[,2])
causeList36[grepl(pattern = "\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<p style=\"text-indent: 20px\">", causeList36[grepl(pattern= "\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList, "</p>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.\\.\\.\\.", replacement = "", x = dat.1[,2])
runApp('myCBD')
runApp('myCBD')
View(causeList36)
View(causeList36)
runApp('myCBD')
runApp('myCBD')
causeNum36
runApp('myCBD')
causeNum36
runApp('myCBD')
shiny::runApp('myCBD')
causeList36       <- gbdMap0[!is.na(gbdMap0$causeList),c("LABEL","causeList","nameOnly")] %>% arrange(LABEL)
source(choose.files())
View(gbdMap0)
causeList36       <- gbdMap0[!is.na(gbdMap0$causeList),c("LABEL","causeList","nameOnly")] %>% arrange(LABEL)
causeList36[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<p style=\"text-indent: 60px\">", causeList36[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList, "</p>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", replacement = "", x = causeList36[,2])
causeList36[grepl(pattern = "\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<p style=\"text-indent: 20px\">", causeList36[grepl(pattern= "\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList, "</p>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.\\.\\.\\.", replacement = "", x = causeList36[,2])
causeList36[grepl(pattern = "\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<b>", causeList36[grepl(pattern= "\\.\\.\\.", x = causeList36[,2]),]$causeList, "</b>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.", replacement = "", x = causeList36[,2])
causeNum36        <- causeList36[,"LABEL"]
names(causeNum36) <- causeList36[,"causeList" ]
phList   <- causeList36[nchar(causeList36$LABEL) <= 3,]
phCode   <- phList[,"LABEL"]
names(phCode) <- phList[,"causeList" ]
bigList  <- causeList36[nchar(causeList36$LABEL) == 1,]
bigCode  <- bigList[,"LABEL"]
names(bigCode) <- bigList[,"causeList"]
sdohVec  <- c("hpi2score", "insured", "inpreschool", "bachelorsed", "abovepoverty", "parkaccess","houserepair")
sdohVecL <- c(
"Health Places Index score",
"Percentage of adults aged 18 to 64 years currently insured",
"Percentage of 3 and 4 year olds enrolled in school",
"Percentage of population over age 25 with a bachelor's education or higher",
"Percent of the population with an income exceeding 200% of federal poverty level",
"Percentage of the population living within a half-mile of a park, beach, or open space greater than 1 acre",
"Percent of households with kitchen facilities and plumbing")
names(sdohVec) <- sdohVecL
View(causeList36)
runApp('myCBD')
names(dat.1) <- c("Condition","Number of deaths","Crude Death Rate","Age-Adjusted Death Rate","Years of Life Lost (YLL)","YLL per 100,000 population","Age-Adjusted YLL Rate","Standard Mortality Ratio")
shiny::runApp('myCBD')
mtext(paste("Measures by Cause,",myYear,myLHJ),outer = TRUE,cex=1.3,line=1)
runApp('myCBD')
inDat <- datCounty
dat.1 <- dplyr::filter(inDat, inDat$county==myLHJ, inDat$year==myYear,inDat$sex==mySex, inDat$CAUSE !=0)
dat.1$causeList <- causeList36[match(dat.1$CAUSE,causeList36[,"LABEL"]),"causeList"]
dat.1 <- dat.1[,c("causeList","Ndeaths","cDeathRate","aRate","YLL","YLLper","YLL.adj.rate","SMR")]
dat.1[,3:6] <- round(dat.1[3:6],1)
dat.1[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList <- paste0("<p style=\"text-indent: 60px\">", dat.1[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = dat.1[,1]),]$causeList, "</p>", sep = "")
View(dat.1)
dat.1 <- dplyr::filter(inDat, inDat$county = "Alameda", inDat$year = 2015, inDat$mySex = "Total")
dat.1 <- dplyr::filter(inDat, inDat$county== "Alameda", inDat$year == 2015, inDat$mySex == "Total")
library(shiny)
library(dplyr)
library(readxl)
library(readr)
library(maptools)   #needed?
library(rgdal)      #needed?
library(leaflet)
library(tmap)
library(sf)
library(classInt);
library(RColorBrewer);
library(epitools)
library(plotly)
library(fs)
library(markdown)
dat.1 <- dplyr::filter(inDat, inDat$county== "Alameda", inDat$year == 2015, inDat$mySex == "Total")
dat.1 <- dplyr::filter(inDat, inDat$county== "Alameda", inDat$year == 2015, inDat$sex=="Total", inDat$CAUSE != 0)
dat.1$causeList <- causeList36[match(dat.1$CAUSE,causeList36[,"LABEL"]),"causeList"]
dat.1 <- dat.1[,c("causeList","Ndeaths","cDeathRate","aRate","YLL","YLLper","YLL.adj.rate","SMR")]
dat.1[,3:6] <- round(dat.1[3:6],1)
View(dat.1)
View(datCounty)
View(causeList36)
causeList36       <- gbdMap0[!is.na(gbdMap0$causeList),c("LABEL","causeList","nameOnly")] %>% arrange(LABEL)
causeList36[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<p style=\"text-indent: 60px\">", causeList36[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList, "</p>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", replacement = "", x = causeList36[,2])
causeList36[grepl(pattern = "\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<p style=\"text-indent: 20px\">", causeList36[grepl(pattern= "\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList, "</p>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.\\.\\.\\.", replacement = "", x = causeList36[,2])
causeList36[grepl(pattern = "\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<b>", causeList36[grepl(pattern= "\\.\\.\\.", x = causeList36[,2]),]$causeList, "</b>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.", replacement = "", x = causeList36[,2])
runApp('myCBD')
causeList36       <- gbdMap0[!is.na(gbdMap0$causeList),c("LABEL","causeList","nameOnly")] %>% arrange(LABEL)
causeList36[grepl(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<p style=\"text-indent: 60px\">", causeList36[grepl(pattern= "\\.\\.\\.\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList, "</p>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.\\.\\.\\.\\.\\.\\.", replacement = "", x = causeList36[,2])
causeList36[grepl(pattern = "\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<p style=\"text-indent: 20px\">", causeList36[grepl(pattern= "\\.\\.\\.\\.\\.\\.", x = causeList36[,2]),]$causeList, "</p>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.\\.\\.\\.", replacement = "", x = causeList36[,2])
causeList36[grepl(pattern = "\\.\\.\\.", x = causeList36[,2]),]$causeList <- paste0("<b>", causeList36[grepl(pattern= "\\.\\.\\.", x = causeList36[,2]),]$causeList, "</b>", sep = "")
causeList36$causeList <- gsub(pattern = "\\.\\.\\.", replacement = "", x = causeList36[,2])
View(causeList36)
View(gbdMap0)
causeList36       <- gbdMap0[!is.na(gbdMap0$causeList),c("LABEL","causeList","nameOnly")] %>% arrange(LABEL)
View(causeList36)
causeList36[,2]
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
HTML(causeNum36)
causeNum36
runApp('myCBD')
?htmlOutput?
?htmlOutput
runApp('myCBD')
?showModal
?tags$br
?p
causeList36
View(causeList36)
library(shiny)
library(dplyr)
library(readxl)
library(readr)
library(maptools)   #needed?
library(rgdal)      #needed?
library(leaflet)
library(tmap)
library(sf)
library(classInt);
library(RColorBrewer);
library(epitools)
library(plotly)
library(fs)
library(markdown)
causeList36       <- gbdMap0[!is.na(gbdMap0$causeList),c("LABEL","causeList","nameOnly")] %>% arrange(LABEL)
View(causeList36)
runApp('myCBD')
?dataTableOutput
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
View(causeList36)
View(gbdMap0)
shiny::runApp('myCBD')
install.packages("sf")
runApp('myCBD')
library(shiny)
library(dplyr)
library(readxl)
library(readr)
library(maptools)   #needed?
library(rgdal)      #needed?
library(leaflet)
library(tmap)
library(sf)
library(classInt);
library(RColorBrewer);
library(epitools)
library(plotly)
library(fs)
library(markdown)
install.packages("sf")
install.packages("sf")
install.packages("sf")
library(sf)
runApp('myCBD')
library(shiny)
library(dplyr)
library(readxl)
library(readr)
library(maptools)   #needed?
library(rgdal)      #needed?
library(leaflet)
library(tmap)
library(sf)
library(classInt);
library(RColorBrewer);
library(epitools)
library(plotly)
library(fs)
library(markdown)
runApp('myCBD')
runApp('myCBD')
causeNum36        <- causeList36[,"LABEL"]
causeNum36
names(causeNum36)
names(causeNum36) <- causeList36[,"causeList" ]
causeList36[,"causeList" ]
View(phList)
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
?div
runApp('myCBD')
shiny::runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
?html()
?html
source(cdph_install)
source(choose.files())
source(choose.files())
?html
??html
?HTML
runApp('myCBD')
runApp('myCBD')
?div
causeList36$causeList
shiny::runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
shiny::runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
shiny::runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
class(causeList36)
class(causeNum36)
?rb
shinyUI(fluidPage(theme = "bootstrap.css",
#  tags$style(type = "text/css", ".irs-grid-pol.small {height: 0px;}"),   # removes ticks between years
tags$h3(mTitle),                                                       # title supplied from Global
sidebarPanel(width=3,
conditionalPanel(condition = fC(c(22,23)), actionButton("mapTab",           "Tab Help"),style=myHelpButtonSty),
conditionalPanel(condition = fC(c(33)),    actionButton("conditionTab",     "Tab Help"),style=myHelpButtonSty),
conditionalPanel(condition = fC(c(45)),    actionButton("conditionTableTab","Tab Help"),style=myHelpButtonSty),
conditionalPanel(condition = fC(c(34)),    actionButton("conditionSexTab",  "Tab Help"),style=myHelpButtonSty),
conditionalPanel(condition = fC(c(44)),    actionButton("rankGeoTab",       "Tab Help"),style=myHelpButtonSty),
conditionalPanel(condition = fC(c(55)),    actionButton("trendTab",         "Tab Help"),style=myHelpButtonSty),
conditionalPanel(condition = fC(c(66)),    actionButton("sdohTab",          "Tab Help"),style=myHelpButtonSty),
br(),br(),
# tags$head(tags$style(HTML('.selectize-dropdown single form-control shiny-cound-input' style = "display:none; visibility: visible;
#
#                           class='selectize-dropdown-content' ")))
#
# tags$class()
# tags$head(tags$class(tags$style(type = 'text/CSS', HTML('.selectize-input {white-space: nowrap} #myCause= div>.choices class = "selectize-input div>. data-value class = something')))),
selectInput2 <- function(inputId, label, choices, selected = NULL, multiple = FALSE){
temp.choices <- names(choices)
n <- length(choices)
names(temp.choices) <- paste0("ABCZYXWVU",1:n) -> temp.names
html <- as.character(selectInput(inputId, label, temp.choices, selected=names(temp.choices[temp.choices==selected]), multiple))
for(i in 1:n){
html <- sub(temp.names[i], as.character(choices[[i]]), html)
}
attr(html,"html") <- TRUE
html
}
# tags$head(tags$style(HTML('.selectize-input {white-space:nowrap} #myCause= div>.selectize-dropdown))),
tags$head(tags$style(HTML('.selectize-input {white-space: nowrap}
#myCAUSE+ div>.selectize-dropdown{width: 300px !important}'))), #Hoping to use this to execute HTML tags in causeList
# tags$head(tags$div(HTML('.selectize-input  #myCause+ div>.selectize-control ')))
conditionalPanel(condition = fC(c(22,23,44,55,66)),    actionButton("causeHelp", "?",style=myButtonSty) ,
# div(style = "font-size: 12px",
selectiInput2("myCAUSE", "Cause:", choices=div(HTML(causeNum36)), selected="A")),
# ),  # size=30 selectize = F, size=3,
conditionalPanel(condition = fC(c(22,23,44)),          checkboxInput("cZoom","Zoom to County",value=FALSE)),
conditionalPanel(condition =  paste(
"((",fC(c(33,34,45,55)),") |",
"(input.cZoom && (",fC(c(22,23,44)),")))"
),
selectInput("myLHJ","County:",choices=lList,selected=STATE)  ),
conditionalPanel(condition = fC(c(22,23,66)),          selectInput("myGeo","Geographic Level:",choices=c("County","Community","Census Tract"))),
conditionalPanel(condition =paste(
"(!(input.myGeo == 'Community' | input.myGeo == 'Census Tract') && (", fC(c(22,23)),") )
| (", fC(c(33,34,45,44)),")"
),
tags$style(HTML(".js-irs-0 .irs-bar-edge, .js-irs-0 .irs-bar {background: #FAFAFA}")),
sliderInput("myYear","Year:",value=2017,min=2001,max=2017,animate = TRUE,round=TRUE,sep="", step=1)  ),
conditionalPanel(condition = fC(c(22,23,33,45,44,66)), radioButtons( "mySex",      "Sex:", choices=c("Total","Female","Male"))),
conditionalPanel(condition = fC(c(33)),                checkboxGroupInput("myLev", "Levels to show:",c("Top Level" = "lev1","Public Health" = "lev2","Detail" = "lev3"),"lev1")),
conditionalPanel(condition = fC(c(22,23)),             actionButton("statecutHelp", "?",style=myButtonSty) ,
checkboxInput("myStateCut", "State-based cutpoints", value=TRUE)),
conditionalPanel(condition = fC(c(33,34)),                numericInput( "myN",        "How Many:", value=10,min=1,max=50)),
conditionalPanel(condition = fC(c(22,23,34,44,55,66)),    actionButton( "measureHelp", "?",style=myButtonSty) ,
#selectInput(  "myMeasure",  "Measure:", choices=lMeasures,selected="YLLper")),
radioButtons(  "myMeasure",  "Measure:", choices=lMeasures,selected="YLLper")),
conditionalPanel(condition = fC(c(33)),                actionButton( "measureHelp", "?",style=myButtonSty) ,
selectInput(  "myMeasureShort",  "Measure Sort Order:", choices=lMeasuresShort)),
conditionalPanel(condition = fC(c(22,23)),              actionButton("cutmethodHelp", "?",style=myButtonSty) ,
radioButtons( "myCutSystem","Cut-point method:", choices=c("quantile","fisher"))),   # pretty
conditionalPanel(condition = fC(c(23)),                checkboxInput("myLabName",  "Place Names", value=FALSE)),
conditionalPanel(condition = fC(c(44)),                checkboxInput("myCI",       "95% CIs?", value=TRUE)),
conditionalPanel(condition = fC(c(66)),                selectInput(  "myX",        "SDOH Variable:", choices=sdohVec)),
hr(),
# conditionalPanel(condition = "input.ID !=  11 ",
#                  br(),
#                  helpText("DEFINITIONS",h6("YLL:  Years of Life Lost"),style="color:black"),br()
#                  ),
conditionalPanel(condition = fC(c(11)),
helpText(textIntroA,style="color:black"), br(),
#helpText(textIntroB,style="color:black"), br(),
helpText(textIntroC,style="color:black"), br(),
if (whichData == "real") { helpText(textNote.real,style="color:black")},
if (whichData == "fake") { helpText(textNote.fake,style="color:red")}
#
# tags$br(),
# icon("envelope-o"),tags$a(href = "mailto:michael.samuel@cdph.ca.gov","Find a bug or have a question?",style="color:blue"),
# tags$br(), tags$a("Developed in R-Shiny",style="color:blue"),
# helpText(tags$a(href="https://github.com/mcSamuelDataSci/CACommunityBurden","GitHub Site",style="color:blue")),
#   br(),
#   HTML('<center><img src="cdph2.gif" height="85" width="100"></center>'),
#   #img(src='cdph2.gif',width = "100px", height = "85px", align = "center")  # , align = "center",
#   helpText(paste("Version:",version),style="color:black")
),
# TEXT on bottom of SIDEBAR
tags$br(),
helpText("Definition - YLL:  Years of Life Lost",style="color:black"),
br(),
icon("envelope-o"),tags$a(href = "mailto:michael.samuel@cdph.ca.gov","Find a bug or have a question?",style="color:blue"),
tags$br(), tags$a("Developed in R-Shiny",style="color:blue"),
helpText(tags$a(href="https://github.com/mcSamuelDataSci/CACommunityBurden","GitHub Site",style="color:blue")),
br(),
HTML('<center><img src="cdph2.gif" height="85" width="100"></center>')
#img(src='cdph2.gif',width = "100px", height = "85px", align = "center")  # , align = "center",
),
# https://stackoverflow.com/questions/35025145/background-color-of-tabs-in-shiny-tabpanel
# works: h5("Home Page",style="color:red")
mainPanel(
hr(),
tabsetPanel(type = "tab",id="ID",
tabPanel("Home Page",  br(),align='center',
img(src="screen shots.jpg",height="100%",width="100%"),value = 11),
tabPanel("Map - Interactive",         htmlOutput(      "map_title"                      ),
leafletOutput(   "cbdMapTL",  width=700,height=700),  value = 22),
tabPanel("Map - Static",              plotOutput(      "cbdMapTS",  height=700,width="100%"),  value = 23),
tabPanel("Rank Conditions",               plotOutput(      "rankCause", width="100%",height=700),  value = 33),
tabPanel("Rank Conditions Table",         dataTableOutput( "rankCauseT" ),  value = 45),   #DT:: or renderDataTable
tabPanel("Rank Conditions by Sex",     plotOutput(      "rankCauseSex", width="100%",height=700),  value = 34),
tabPanel("Rank Counties/Communities", plotOutput(      "rankGeo",   width="100%",height=1700), value = 44),
tabPanel("Trend",                     plotOutput(      "trend",     width="100%",height=700),  value = 55),
tabPanel("SDOH Associations",  br(),      plotlyOutput(    "scatter",             height=700),  value = 66),
tabPanel("Technical",        br(), includeMarkdown("technical.md"),value = 77)
)       )
))
selectInput2 <- function(inputId, label, choices, selected = NULL, multiple = FALSE){
temp.choices <- names(choices)
n <- length(choices)
names(temp.choices) <- paste0("ABCZYXWVU",1:n) -> temp.names
html <- as.character(selectInput(inputId, label, temp.choices, selected=names(temp.choices[temp.choices==selected]), multiple))
for(i in 1:n){
html <- sub(temp.names[i], as.character(choices[[i]]), html)
}
attr(html,"html") <- TRUE
html
}
runApp('myCBD')
runApp('myCBD')
runApp('myCBD')
cat(as.character(selectInput("myCause", "Cause:", choices = div(HTML(causeNum36)), selected = "A")))
shiny::runApp('myCBD')
